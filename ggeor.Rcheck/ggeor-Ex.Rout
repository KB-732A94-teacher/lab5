
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ggeor"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "ggeor-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('ggeor')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("gaddress")
> ### * gaddress
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: gaddress
> ### Title: gaddress
> ### Aliases: gaddress
> 
> ### ** Examples
> 
> gaddress("Linkoping")
Input address: Linkoping 

    address      lat      lng
1 Linkoping 58.41081 15.62137
> gaddress("Hanyang University")
Input address: Hanyang+University 

             address      lat      lng
1 Hanyang+University 37.55723 127.0453
2 Hanyang+University 37.55535 127.0443
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("gaddress", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:jsonlite'

> nameEx("ggeor-package")
> ### * ggeor-package
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ggeor-package
> ### Title: ggeor package
> ### Aliases: ggeor-package ggeor
> ### Keywords: package
> 
> ### ** Examples
> 
> gaddress("Seoul")
Input address: Seoul 

  address      lat     lng
1   Seoul 37.56654 126.978
> gaddress("Hanyang University")
Input address: Hanyang+University 

             address      lat      lng
1 Hanyang+University 37.55723 127.0453
2 Hanyang+University 37.55535 127.0443
> glatlng("37.56654, 126.978")
Input latitude and longitude:  37.56654,126.978 

[1] "International Finance Center Seoul, Myeong-dong, Seoul"
> glatlng("37.55723, 127.0453")
Input latitude and longitude:  37.55723,127.0453 

[1] "154-25 Sageun-dong, Seongdong-gu, Seoul, South Korea"
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ggeor-package", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:jsonlite'

> nameEx("glatlng")
> ### * glatlng
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: glatlng
> ### Title: glatlng
> ### Aliases: glatlng
> 
> ### ** Examples
> 
> glatlng("37.56654, 126.978")
Input latitude and longitude:  37.56654,126.978 

[1] "International Finance Center Seoul, Myeong-dong, Seoul"
> glatlng("37.55723, 127.0453")
Input latitude and longitude:  37.55723,127.0453 

[1] "154-25 Sageun-dong, Seongdong-gu, Seoul, South Korea"
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("glatlng", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.81 0.22 3.4 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
